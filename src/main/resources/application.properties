# swagger and health in production as well
quarkus.swagger-ui.always-include=true
quarkus.smallrye-health.ui.always-include=true

# Use JIB to build container image teedjay/quarkus-kafka-streams:latest
quarkus.container-image.build = false
quarkus.container-image.push = false
quarkus.container-image.group = teedjay
quarkus.container-image.additional-tags = latest
quarkus.jib.base-jvm-image=adoptopenjdk/openjdk15:centos-jre

# Configure Kafka and SmallRye Kafka connector
kafka.bootstrap.servers=localhost:9092
quarkus.kafka.health.enabled=true
quarkus.reactive-messaging.health.enabled=true
quarkus.reactive-messaging.metrics.enabled=true

# Test application settings
topic.input = TEEDJAY-INPUT
topic.output = TEEDJAY-OUTPUT
topic.dlq = TEEDJAY-ERROR

# number of acks to wait for
mp.messaging.connector.smallrye-kafka.acks=0
mp.messaging.connector.smallrye-kafka.enable.auto.commit=true

# Generator for producing random messages
mp.messaging.outgoing.generator.connector=smallrye-kafka
mp.messaging.outgoing.generator.topic=TEEDJAY-INPUT
mp.messaging.connector.smallrye-kafka.max-inflight-messages=10
mp.messaging.outgoing.generator.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Streams
quarkus.kafka-streams.health.enabled=true
quarkus.kafka-streams.bootstrap-servers=localhost:9092
quarkus.kafka-streams.application-id=teedjay-quarkus-kafka-streams
quarkus.kafka-streams.topics=TEEDJAY-INPUT,TEEDJAY-OUTPUT,TEEDJAY-ERROR

# Streams options
kafka-streams.processing.guarantee=exactly_once
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG

# Set key / value as default to string (key should be string as default anyway)
kafka-streams.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
kafka-streams.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
